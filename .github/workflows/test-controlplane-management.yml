#
#  Copyright (c) 2024 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#

name: Run API tests (postman)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  newman_test:
    runs-on: ubuntu-latest
    steps:
      - name: "Setup Helm"
        uses: azure/setup-helm@v4
        with:
          version: v3.8.1

      - name: "Setup Kubectl"
        uses: azure/setup-kubectl@v4

      - uses: actions/checkout@v4

      - uses: eclipse-edc/.github/.github/actions/setup-build@main

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3

      - name: "Build runtime images"
        working-directory: ./
        run: |
          ./gradlew -Ppersistence=true dockerize 


      - name: "Create k8s Kind Cluster"
        uses: helm/kind-action@v1.10.0
        with:
          config: deployment/kind.config.yaml
          cluster_name: dcp-demo

      - name: "Load runtime images into KinD"
        run: kind load docker-image controlplane:latest dataplane:latest identity-hub:latest catalog-server:latest sts:latest -n dcp-demo

      - name: "Install nginx ingress controller"
        run: |-
          echo "::notice title=nginx ingress on KinD::For details how to run nginx ingress on KinD check https://kind.sigs.k8s.io/docs/user/ingress/#ingress-nginx"
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=90s

      - name: "Terraform init"
        working-directory: ./deployment
        run: |-
          terraform init -reconfigure
      - name: "Terraform plan"
        working-directory: ./deployment
        run: |-
          terraform plan -out=$GITHUB_SHA.out

      - name: "Terraform apply"
        working-directory: ./deployment
        run: |-
          terraform apply "$GITHUB_SHA.out"

      - name: "Seed dataspace"
        run: |-
          chmod +x seed-k8s.sh
          ./seed-k8s.sh
          
      - name: "Run Newman"
        working-directory: ./deployment/postman
        run: |-
          newman run "MVD.postman_collection.json" -e "MVD K8S.postman_environment.json" --folder "ControlPlane Management" --delay-request 5000 --verbose

